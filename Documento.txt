#ifndef _BICOLA
#define _BICOLA
#include<iostream>
#include<string>
typedef struct c{
	int id, saldo, edad; 
	std::string nombre;
	std::string tipo; 
}cliente;
typedef cliente Tdato;
typedef struct nodo{
	Tdato dato;
	struct nodo *sgt;
	struct nodo *ant;
}Nodo;
Nodo * crearNodo(Nodo *a, Tdato d, Nodo *s){
	Nodo *p=new Nodo;
	p->dato=d;
	p->sgt=s;
	p->ant=a;
	return p;
}
typedef struct bicola{
	Nodo *fr;
	Nodo *fin;
	int tam;
	void iniciar(){
		fr=fin=NULL;
		tam=0;
	}
	bool vacia(){
		return fr==NULL || fin==NULL;
	}
	void insertar_frente(Tdato d){
		if(vacia()){
			fr=fin=crearNodo(NULL,d,NULL);
		}else{
			fr=crearNodo(NULL,d,fr);
			fr->sgt->ant=fr;
		}
		tam++;
	}
	void insertar_final(Tdato d){
		if(vacia()){
			fr=fin=crearNodo(NULL,d,NULL);
		}else{
			fin=crearNodo(fin,d,NULL);
			fin->ant->sgt=fin;
		}
		tam++;
	}
	Tdato quitar_frente(){
		if(!vacia()){
			Tdato tilin=fr->dato;
			Nodo *p=fr;
			fr=fr->sgt;
			fr->ant=NULL;
			delete(p);
			tam--;
			return tilin;
		}
		Tdato valorpredeterminado;
		return valorpredeterminado;
	}
	Tdato quitar_final(){
		if(!vacia()){
			Tdato tilin=fin->dato;
			Nodo *p=fin;
			fin=fin->ant;
			fin->sgt=NULL;
			delete(p);
			tam--;
			return tilin;
		}
		Tdato valorpredeterminado;
		return valorpredeterminado;
	}
	int tama(){
		return tam;
	}
	Tdato datoFrente(){
		if(!vacia()){
			return fr->dato;
		}
		Tdato valorpredeterminado;
		return valorpredeterminado;
	}
	Tdato datoFin(){
		if(!vacia()){
			return fin->dato;
		}
		Tdato valorpredeterminado;
		return valorpredeterminado;
	}
	void insertar_pos(Tdato d, int pos){
		if(!vacia()){
			Nodo *p=fr;
			for(int i=0;i<pos && p!=NULL;i++)
				p=p->sgt;
			if(p!=NULL){
				Nodo *q=crearNodo(p->ant,d,p);
				p->ant->sgt=q;
				p->ant=q;
				tam++;
			}
		}
	}
	Tdato quitar_pos(int pos){
		if(!vacia()){
			Nodo *p=fr;
			for(int i=0;i<pos && p!=NULL;i++)
				p=p->sgt;
			if(p!=NULL){
				Tdato tilin=p->dato;
				if(p->ant!=NULL){
					p->ant->sgt=p->sgt;
				}else{
					fr=fr->sgt;
				}
				if(p->sgt!=NULL){
					p->sgt->ant=p->ant;
				}else{
					fin=fin->ant;
				}
				tam--;
				delete(p);
				return tilin;
			}
		}
		Tdato valorpredeterminado;
		return valorpredeterminado;
	}
}Bicola;
#endif